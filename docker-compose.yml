version: "3.8"

services:
  pyservice:
    build: .
    container_name: pyservice
    env_file: .env
    depends_on:
      redis:
        condition: service_healthy  # Espera até que o Redis esteja pronto
    restart: always
    networks:
      - pyservice_default
    volumes:
      - pyservice_data:/app/data  # Volume persistente para dados do pyservice
      - .:/app  # <<<<<< ISSO MONTA SEU CÓDIGO LOCAL TODO DENTRO DO CONTAINER

  redis:
    image: "redis:latest"
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      retries: 5
      timeout: 3s
    networks:
      - pyservice_default

volumes:
  pyservice_data:
    # Define um volume chamado pyservice_data, usado para armazenar dados persistentes do pyservice.

networks:
  pyservice_default:
    external: true
    # Usa a rede externa pyservice_default para permitir a comunicação com RabbitMQ, MongoDB, etc.

